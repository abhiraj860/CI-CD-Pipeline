name: Manual Second Docker Run 

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker Image Tag'
        required: false
        default: 'latest'
      api_port:
        description: 'API Port'
        required: true
        default: '3000'

jobs:
  run-docker-image:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Pull Docker image from Docker Hub
      run: docker pull abhiraj860/node_python_docker:${{ inputs.image_tag }}

    - name: Run Docker container
      run: docker run -d -p ${{ inputs.api_port }}:${{ inputs.api_port }} --name my-container abhiraj860/node_python_docker:${{ inputs.image_tag }}

    - name: Install curl and jq
      run: sudo apt-get update && sudo apt-get install -y curl jq

    - name: Wait for the container to be ready
      run: sleep 10

    - name: Send POST request to the Node.js application
      run: |
        curl -X POST http://localhost:${{ inputs.api_port }}/pull-and-run \
        -H "Content-Type: application/json" \
        -d '{"name": "Abhiraj Aditya312313", "value": 4343434123123}' -o response.json
        cat response.json

    - name: Verify the insertion message
      run: |
        RESPONSE_MESSAGE=$(cat response.json | jq -r .message)
        if [[ "$RESPONSE_MESSAGE" != "Data has been inserted into MongoDB" ]]; then
          echo "Data insertion failed"
          exit 1
        fi

    - name: Stop and remove Docker container
      if: always()
      run: |
        docker stop my-container
        docker rm my-container
